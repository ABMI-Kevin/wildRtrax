% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acoustic-pre-processing.R
\name{wt_audio_scanner}
\alias{wt_audio_scanner}
\title{Pre-process acoustic data for use in WildTrax}
\usage{
wt_audio_scanner(path, file_type, extra_cols = F, tz = "")
}
\arguments{
\item{path}{Character; The path to the directory with audio files you wish to scan. Can be done recursively.}

\item{file_type}{Character; Takes one of four values: wav, wac, flac or all. Use "all" if your directory contains many types of files.}

\item{extra_cols}{Boolean; Default set to FALSE for speed. If TRUE, returns additional columns for file duration, sample rate and number of channels.}

\item{tz}{Character; Forces a timezone to each of the recording files; if the time falls into a daylight savings time break, \code{wt_audio_scanner} will assume the next valid time. Use \code{OlsonNames()} to get a list of valid names.}
}
\value{
A tibble with a summary of your audio files
}
\description{
Scans directories of audio data and returns the file path, file name, file size, date, time, location name,
sample rate, length (seconds) and number of channels to be used as filters for other uses
}
\details{
The following set of functions help to pre-process and organize audio and corresponding metadata.
\code(\code{wt_audio_scanner}) scans a directory of audio files and prepares them in a tibble with WildTrax formatted columns.
\code(\code{wt_run_ap}) allows you to generate acoustic indices and false-colour spectrograms from a \code(\code{wt_audio_scanner})
tibble, while \code{`wt_glean_ap`} wrangles the output into summary plots and LDFCs. \code(\code{wt_signal_level}) detects signals in audio based on amplitude thresholds. In conjunction, these tools allow
you to select recordings parameterized to a specific study design. \code{vignette("linking-media-to-wildtrax")} will allow you to
dive deeper in how to link the data to the WildTrax platform.
}
\section{\code{wt_audio_scanner} details}{

}

\examples{
\dontrun{
df <- wt_audio_scanner(path = "C:/Users/me/path/to/audio/files", file_type = "all", extra_cols = FALSE, tz = "US/Mountain")
}

}
